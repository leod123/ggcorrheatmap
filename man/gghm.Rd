% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gghm.R
\name{gghm}
\alias{gghm}
\title{Make a heatmap with ggplot2.}
\usage{
gghm(
  x,
  fill_scale = NULL,
  fill_name = "value",
  na_remove = FALSE,
  layout = "full",
  include_diag = F,
  return_data = F,
  show_legend = c(fill = TRUE, size = TRUE),
  cell_shape = "heatmap",
  size_scale = NULL,
  label_cells = F,
  cell_label_size = 3,
  cell_label_digits = NULL,
  border_col = "grey",
  border_lwd = 0.5,
  border_lty = 1,
  names_diag = TRUE,
  names_diag_param = NULL,
  names_x = FALSE,
  names_x_side = "top",
  names_y = FALSE,
  names_y_side = "left",
  annot_rows_df = NULL,
  annot_cols_df = NULL,
  annot_rows_fill = NULL,
  annot_cols_fill = NULL,
  annot_rows_side = "right",
  annot_cols_side = "bottom",
  annot_legend = TRUE,
  annot_dist = 0.2,
  annot_gap = 0,
  annot_size = 0.5,
  annot_label = TRUE,
  annot_border_col = if (length(border_col) == 1) border_col else "grey",
  annot_border_lwd = if (length(border_lwd) == 1) border_lwd else 0.5,
  annot_border_lty = if (length(border_lty) == 1) border_lty else 1,
  annot_na_col = "grey",
  annot_na_remove = na_remove,
  annot_rows_params = NULL,
  annot_cols_params = NULL,
  annot_rows_label_side = "bottom",
  annot_cols_label_side = "left",
  annot_rows_label_params = NULL,
  annot_cols_label_params = NULL,
  cluster_rows = FALSE,
  cluster_cols = FALSE,
  cluster_distance = "euclidean",
  cluster_method = "complete",
  dend_rows = TRUE,
  dend_cols = TRUE,
  dend_rows_side = "right",
  dend_cols_side = "bottom",
  dend_col = "black",
  dend_height = 0.3,
  dend_lwd = 0.3,
  dend_lty = 1,
  dend_rows_params = NULL,
  dend_cols_params = NULL,
  dend_rows_extend = NULL,
  dend_cols_extend = NULL,
  legend_position = "right",
  plot_margin = c(20, 10, 10, 20),
  margin_unit = "pt"
)
}
\arguments{
\item{x}{Matrix or data frame in wide format to make a heatmap of. If rownames are present they are used for the y axis labels, otherwise the row number is used.
If a column named \code{.names} (containing unique row identifiers) is present it will be used as rownames.}

\item{fill_scale}{A \code{ggplot2} scale object for the cell fill colour scale. NULL (default) uses the \code{ggplot2} default.}

\item{fill_name}{String to use for the colour scale legend title.}

\item{na_remove}{Logical indicating if NA values in the heatmap should be omitted (meaning no cell border is drawn).
If NAs are kept, the fill colour can be set in the \code{ggplot2} scale.}

\item{layout}{String specifying the layout of the output heatmap. Possible layouts include
top left, top right, bottom left, bottom right, or the whole heatmap (default and only possible option if the matrix is asymmetric).
The string should be composedÂ of the vertical position (top or bottom) followed by the horizontal position (left or right).
Bottom can be specified by 'bottom', 'lower', 'down', or the first letter of these. Left is specified by 'left' or 'l'.
'full', 'whole', or 'all' (or 'f', 'w', 'a') result in the whole matrix being plotted.
For any other strings top and right are selected.}

\item{include_diag}{Logical indicating if the diagonal cells should be plotted (ignored if the whole matrix is plotted).
Mostly only useful for getting a cleaner look with symmetric correlation matrices with triangular layouts, where the diagonal is known to be 1.}

\item{return_data}{Logical indicating if the data used for plotting should be returned.}

\item{show_legend}{Logical vector indicating if main heatmap legends (fill and size) should be shown. If length 1 it is applied to both fill and size legends.
Can be specified in an aesthetic-specific manner using a named vector like \code{c('fill' = TRUE, 'size' = FALSE)}.}

\item{cell_shape}{Value specifying what shape the heatmap cells should take. Any non-numeric value will result in a normal heatmap with square cells (default).
A numeric value can be used to specify an R shape (pch) to use, such as 21 for filled circles. Note that only shapes 21-25 support filling (others will not display the heatmap colour properly).}

\item{size_scale}{\verb{ggplot2::scale_size_*} call to use for size scaling if \code{cell_shape} is numeric.}

\item{label_cells}{Logical specifying if the cells should be labelled with the values.}

\item{cell_label_size}{Size of cell labels, used as the \code{size} argument in \code{ggplot2::geom_text}.}

\item{cell_label_digits}{Number of digits to display when cells are labelled (if numeric values). Default is 2, passed to \code{round}. NULL for no rounding.}

\item{border_col}{Colour of cell borders. If \code{cell_shape} is non-numeric, \code{border_col} can be set to NA to remove borders completely.}

\item{border_lwd}{Size of cell borders. If \code{cell_shape} is numeric, \code{border_col} can be set to 0 to remove borders.}

\item{border_lty}{Line type of cell borders. Not supported for numeric \code{cell_shape}.}

\item{names_diag}{Logical indicating if names should be written in the diagonal cells (for a symmetric matrix).}

\item{names_diag_param}{List with named parameters (such as size, angle, etc) passed on to geom_text when writing the column names in the diagonal.}

\item{names_x}{Logical indicating if names should be written on the x axis. Labels can be customised using \code{ggplot2::theme()} on the output plot.}

\item{names_x_side}{String specifying position of the x axis names ("top" or "bottom").}

\item{names_y}{Logical indicating if names should be written on the y axis.}

\item{names_y_side}{String specifying position of the y axis names ("left" or "right").}

\item{annot_rows_df}{Data frame for row annotations. The names of the columns in the data must be included,
either as row names or in a column named \code{.names}. Each other column specifies an annotation where the column name
will be used as the annotation name (in the legend and next to the annotation). Numeric columns will use a continuous
colour scale while factor or character columns use discrete scales.}

\item{annot_cols_df}{Same usage as \code{annot_rows_df} but for column annotation.}

\item{annot_rows_fill}{Named list for row annotation colour scales. The names should specify which annotation each scale applies to.
Elements can be strings or ggplot2 "Scale" class objects. If a string it is used as the brewer palette (categorical annotation) or viridis option (continuous annotation).
If a scale object it is used as is, allowing more flexibility. This may change the order that legends are drawn in,
specify order using the \code{guide} argument in the \code{ggplot2} scale function.}

\item{annot_cols_fill}{Named list used for column annotation colour scales, used like \code{annot_rows_fill}.}

\item{annot_rows_side}{String specifying which side row annotation should be drawn ('left' or 'l' for left, otherwise right).}

\item{annot_cols_side}{String specifying which side column annotation should be drawn ('bottom', 'down', 'b', 'd' for bottom, otherwise top).}

\item{annot_legend}{Logical indicating if row and column annotations should have legends.}

\item{annot_dist}{Distance between heatmap and first annotation cell where 1 is the size of one heatmap cell. Used for both row and column annotation.}

\item{annot_gap}{Distance between each annotation where 1 is the size of one heatmap cell. Used for both row and column annotation.}

\item{annot_size}{Size (width for row annotation, height for column annotation) of annotation cells. Used for both row and column annotation.}

\item{annot_label}{Logical controlling if names of annotations should be shown in the drawing area.}

\item{annot_border_col}{Colour of cell borders in annotation. Same as \code{border_col} of the main heatmap if it is of length 1, otherwise uses default (grey).}

\item{annot_border_lwd}{Line width of cell borders in annotation. Same as \code{border_lwd} of the main heatmap if it is of length 1, otherwise uses default (0.5).}

\item{annot_border_lty}{Line type of cell borders in annotation. Same as \code{border_lty} of the main heatmap if it is of length 1, otherwise uses default (solid).}

\item{annot_na_col}{Colour to use for NA values in annotations. Annotation-specific colour can be set in the ggplot2 scales in
the \verb{annot_*_fill} arguments.}

\item{annot_na_remove}{Logical indicating if NAs in the annotations should be removed (producing empty spaces).}

\item{annot_rows_params}{Named list with parameters for row annotations to overwrite the defaults set by the \verb{annot_*} arguments, each name corresponding to the \code{*} part
(see details for more information).}

\item{annot_cols_params}{Named list with parameters for column annotations, used like \code{annot_rows_params}.}

\item{annot_rows_label_side}{String specifying which side the row annotation labels should be on. Either "top" or "bottom".}

\item{annot_cols_label_side}{String specifying which side the column annotation labels should be on. Either "left" or "right".}

\item{annot_rows_label_params}{Named list of parameters for row annotation labels. Given to \code{grid::textGrob}, see \code{?grid::textGrob} for details. \code{?grid::gpar} is also helpful.}

\item{annot_cols_label_params}{Named list of parameters for column annotation labels. Given to \code{grid::textGrob}, see \code{?grid::textGrob} for details. \code{?grid::gpar} is also helpful.}

\item{cluster_rows}{Logical indicating if rows should be clustered.}

\item{cluster_cols}{Logical indicating if columns should be clustered.}

\item{cluster_distance}{String with the distance metric to use for clustering, given to \code{dist}.}

\item{cluster_method}{String with the clustering method to use, given to \code{hclust}.}

\item{dend_rows}{Logical indicating if a dendrogram should be drawn for the rows.}

\item{dend_cols}{Logical indicating if a dendrogram should be drawn for the columns.}

\item{dend_rows_side}{Which side to draw the row dendrogram on ('left' or 'l' for left, otherwise right).}

\item{dend_cols_side}{Which side to draw the column dendrogram on ('bottom', 'down', 'b', 'd' for bottom, otherwise top).}

\item{dend_col}{Colour to use for dendrogram lines, applied to both row and column dendrograms.}

\item{dend_height}{Number by which to scale dendrogram height, applied to both row and column dendrograms.}

\item{dend_lwd}{Linewidth of dendrogram lines, applied to both row and column dendrograms.}

\item{dend_lty}{Dendrogram line type, applied to both row and column dendrograms.}

\item{dend_rows_params}{Named list for row dendrogram parameters. See details for more information.}

\item{dend_cols_params}{Named list for column dendrogram parameters. See details for more information.}

\item{dend_rows_extend}{Named list or functional sequence for specifying \code{dendextend} functions to apply to the row dendrogram. See details for usage.}

\item{dend_cols_extend}{Named list or functional sequence for specifying \code{dendextend} functions to apply to the column dendrogram. See details for usage.}

\item{legend_position}{Position of the legends, given to \code{ggplot2::theme}. Either a string for the position outside the plotting area,
or a numeric vector of length 2 for normalised coordinates inside the plotting area. If "none", no legends are drawn.}

\item{plot_margin}{Plot margins, specified as a numeric vector of length 4 in the order of top, right, bottom, left.}

\item{margin_unit}{Unit to use for the specified margin.}
}
\value{
The heatmap as a \code{ggplot} object.
If \code{return_data} is TRUE the output is a list containing the plot (named 'plot'),
the plotting data ('plot_data'), and the result of the clustering ('row_clustering' and/or 'col_clustering).
}
\description{
Make a heatmap with ggplot2.
}
\details{
The annotation parameter arguments \code{annot_rows_params} and \code{annot_cols_params} should be named lists, where the possible options correspond to
the different \verb{annot_*} arguments. The possible options are "legend" (logical, if legends should be drawn), "dist" (distance between heatmap and annotation), "gap" (distance between annotations),
"size" (cell size), "label" (logical, if the annotation names should be displayed), "border_col" (colour of border) and "border_lwd" (border line width).
Any unused options will use the defaults set by the \verb{annot_*} arguments.

The dendrogram parameters arguments \code{dend_rows_params} and \code{dend_cols_params} should be named lists, analogous to the annotation parameter arguments. Possible options are
"col" (line colour), "height" (height scaling), "lwd" (line width), and "lty" (line type).

The \code{dend_rows_extend} and \code{dend_cols_extend} arguments make it possible to customise the dendrograms using the \code{dendextend} package.
The argument should be a named list, each element named after the \code{dendextend} function to use (consecutive usage of the \code{set} function
is supported due to duplicate list names being possible). Each element should contain any arguments given to the \code{dendextend} function,
such as the \code{what} argument used in the \code{set} function. Alternatively, \code{dendextend} functions can be provided in a functional sequence ("fseq" object)
by piping together functions using the \verb{\%>\%} pipe. See examples for example usage.
}
\examples{

# Use part of the mtcars data (for visibility)
hm_in <- mtcars[1:15, ]

# Basic usage
gghm(hm_in)

# Different layout (using a symmetric matrix)
gghm(cor(mtcars), layout = "br")

# With clustering
gghm(scale(hm_in), cluster_rows = TRUE, cluster_cols = TRUE)

# Adjusting cluster dendrograms using common and specific options
gghm(scale(hm_in), cluster_rows = TRUE, cluster_cols = TRUE,
     # Common options
     dend_lwd = 0.7, dend_col = "magenta",
     # Specific options
     dend_rows_params = list(height = 1), dend_cols_params = list(lty = 2))

# With annotation and specifying colour scales
set.seed(123)
annot_rows <- data.frame(.names = rownames(hm_in),
                         annot1 = rnorm(nrow(hm_in)),
                         annot2 = sample(letters[1:3], nrow(hm_in), TRUE))
# Specify colour scale for one of the annotations (viridis mako)
annot_fill <- list(annot1 = "G")

gghm(scale(hm_in),
     # Change colours of heatmap
     fill_scale = ggplot2::scale_fill_gradient(low = "beige", high = "sienna2"),
     annot_rows_df = annot_rows, annot_rows_fill = annot_fill,
     # Change margins to fit annotation labels,
     plot_margin = c(20, 10, 60, 20))

# Using the dend_*_extend arguments
gghm(scale(hm_in), cluster_rows = TRUE, dend_rows_extend =
  list("set" = list("branches_lty", c(1, 2, 3)),
       # Empty list element (or NULL) if no arguments to be given
       "highlight_branches_col" = list()))

# dend_*_extend with functional sequence
library(dplyr)
library(dendextend)
gghm(scale(hm_in), cluster_cols = TRUE,
     dend_cols_extend = . \%>\% set("branches_k_col", k = 3) \%>\% highlight_branches_lwd())

}
